# CI de Nível 01 - Disparo dentro do fluxo de CI de desenvolvimento
name: 'Execucao por push'
# triggers ou gatilhos de execucao
# Gatilho de execução por push ao repositorio
on: push

jobs:
  # - baixar as dependencias
  # - compilar
  # - testar
  inspection:
    # maquina que vai rodar
    runs-on: ubuntu-latest

    #passo a paso das acoes do job
    steps:
      # - run: echo 'Execucao manual'
      - uses: actions/checkout@v4
      # - uses: actions/setup-node@v4
      #     with:
      #         node-version: lts/*
      - name: Instalando Yarn
        run: npm install -g yarn

      - name: Instalando dependências
        run: yarn

      - name: Padronização de codigo
        run: yarn lint

  allureServ:
    runs-on: ubuntu-latest
    needs: [inspection]
    steps:
      - uses: actions/checkout@v4
      - name: Instalando Yarn
        run: npm install -g yarn
      - name: Instalando dependências
        run: yarn run allure-bs &

  wdioBrowserstack:
    runs-on: ubuntu-latest
    needs: [allureServ]

    env:
      BROWSERSTACK_USERNAME: ${{ secrets.BS_USER }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BS_ACCESS_KEY }}
      BROWSERSTACK_APP: ${{ vars.BS_APP }}
      LOJINHA_APP_PASS: ${{ secrets.LOJINHA_APP_PASS }}
      LOJINHA_APP_USER: ${{ secrets.LOJINHA_APP_USER }}

    steps:
      - uses: actions/checkout@v4

      - name: Instalando Yarn
        run: npm install -g yarn

      - name: Instalando dependências
        run: yarn

      - name: Testes e2e Lojinha app
        run: yarn run bs

      - uses: actions/upload-artifact@v4
        # por padrao a pipeline cancela se houver erro para evitar que ele cancele o passo seguinte no caso de erro, se quiser que a pipeline continue, basta adicionar o parametro 'if: ${{ !cancelled() }}'
        if: ${{ !cancelled() }}
        with:
          name: relatorio-de-testes
          path: ./report
